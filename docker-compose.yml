version: '3.8'
services:
  login_app:
    image: anhtran0310/3612_login_api_app_image:1.3
    container_name: login_api
    ports:
      - "4000:4000"
    env_file:
      - .env
    depends_on:
      mysql_db:
        condition: service_healthy
    networks:
      - backend
    # entrypoint: >
    #   sh -c "./wait-for-it.sh mysql_db 3306 15 && npm start"

  mysql_db:
    image: mysql:8.0
    container_name: mysql_db
    environment:
      MYSQL_ROOT_PASSWORD: 123456
      MYSQL_DATABASE: login_db
      MYSQL_USER: dbuser
      MYSQL_PASSWORD: P@ssw0rd
    ports:
      - "3306:3306"
    networks:
      - backend
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost -p123456"]
      interval: 3s
      timeout: 1s
      retries: 10

networks:
  backend:

# version: '3.8'

# services:
#   mysql:
#     image: mysql:8.0
#     container_name: mysql-server
#     restart: always
#     environment:
#       MYSQL_ROOT_PASSWORD: 123456
#       MYSQL_USER: dbuser
#       MYSQL_PASSWORD: P@ssw0rd
#       MYSQL_DATABASE: login_db
#     ports:
#       - "3306:3306"
#     volumes:
#       - mysql_data:/var/lib/mysql

#     healthcheck:
#       # test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
#       test: ["CMD-SHELL", "mysqladmin ping -h localhost || echo 'Ping failed'"]
#       interval: 10s
#       timeout: 5s
#       retries: 3

#   node-app:
#     build: 
#       dockerfile: Dockerfile
#     container_name: my-node-app
#     ports:
#       - "3000:3000"
#     depends_on:
#       mysql:
#         condition: service_healthy
#     restart: always
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:3000/hello"]
#       interval: 10s
#       timeout: 5s
#       retries: 3

#   tester:
#     image: curlimages/curl
#     depends_on:
#       node-app:
#         condition: service_healthy
#     command: >
#       sh -c "curl -sSf http://node-app:3000/hello"

# volumes:
#   mysql_data:
